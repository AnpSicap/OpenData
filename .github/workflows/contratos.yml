name: Contratos ANP
on:
  schedule:
    - cron: '0 6 * * 1-5'  # Segunda a sexta √†s 6h UTC (3h BRT)
  workflow_dispatch:        # ‚úÖ Apenas colaboradores podem executar

# üîí RESTRI√á√ïES DE PERMISS√ÉO
permissions:
  actions: none
  contents: none

jobs:
  contratos:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    # üîì PERMISS√ïES ESPEC√çFICAS PARA O JOB
    permissions:
      actions: read
      contents: write
      id-token: write
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: pip install requests
        
    - name: Run contratos API
      run: python src/contratos.py
        
    - name: Commit e push dos dados
      run: |
        git config --local user.email "sicap-sga@outlook.com"
        git config --local user.name "GitHub SICAP ANP Automation"

        git add data/contratos.json
        git commit -m "üì¶ Atualiza√ß√£o de IDs: $(date +'%Y-%m-%d %H:%M')" || echo "Sem altera√ß√µes para commit"

        # üîÑ Tentar at√© 3 vezes em caso de erro de push
        for i in 1 2 3; do
          # Pega as √∫ltimas mudan√ßas do remoto e rebaseia antes de push
          git pull --rebase origin main || true
          
          if git push origin main; then
            echo "‚úÖ Push realizado com sucesso"
            break
          else
            echo "‚ö†Ô∏è Tentativa $i falhou, tentando de novo em 10s..."
            sleep 10
          fi
        done
